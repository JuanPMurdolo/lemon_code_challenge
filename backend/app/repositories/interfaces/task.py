# app/repositories/interfaces/task.py
from typing import Protocol, List, Optional
from app.models.task import Task
from app.schemas.task import TaskCreate, TaskUpdate


class AbstractTaskRepository(Protocol):
    async def get_by_id(self, task_id: int) -> Optional[Task]: ...
    async def get_all(self) -> List[Task]: ...
    async def create(self, task_in: TaskCreate) -> Task: ...
    async def update(self, task_id: int, task_in: TaskUpdate) -> Optional[Task]: ...
    async def delete(self, task_id: int) -> bool: ...
    async def enrich_tasks_with_usernames(self, tasks: List[Task]) -> List[dict]: ...